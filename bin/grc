#!/bin/bash

_ble_bash=$((BASH_VERSINFO[0]*10000+BASH_VERSINFO[1]*100+BASH_VERSINFO[2]))
if ((_ble_bash>=30100)); then
  function array#push { eval "$1+=(\"\${@:2}\")"; }
else
  function array#push/impl {
    eval "$1[\${#$1[@]}]=\"\$2\""
  }
  function array#push {
    local v
    for v in "${@:2}"; do
      array#push/impl "$1" "$v"
    done
  }
fi

GetExtension:() {
  local _slash=/
  local v="$1"; shift
  local cand="${1##*.}"
  if test "$cand" != "$1" -a "${cand/$_slash/}" == "$cand"; then
    eval "$v='.${1##*.}'"
  else
    eval "$v=''"
  fi
}

declare color_option=--color=auto

declare -a findsrc_args
declare -a grep_opts=()
declare -a grep_files=()
regexp=

declare fDefaultExcludes=

while (($#)); do
  declare arg="$1"
  shift
  case "$arg" in
  (--help)
    cat <<EOF
usage: grc [options] pattern [files...]

options

  --help

grep options

  --color
  -C NUMBER
  -U, --binary
  -F. --fixed-strings

findsrc options:

  -x, --extension=EXTENSIONS
  -a
  -b
  -t, --type=SRCTYPE
  --exclude=PATTERN

EOF
    exit
    ;;
  (-C)
    array#push grep_opts -C "$1"
    shift 1 ;;
  (-C?*)
    array#push grep_opts -C "${arg:2}" ;;
  (-U|--binary|-F|--fixed-strings)
    array#push grep_opts "$arg" ;;
  (--color)
    color_option=--color=always ;;
  (-x)
    array#push findsrc_args "$arg" "$1"
    shift 1 ;;
  (-[abAB]|--exclude=*|--type=*|--exntesion=*)
    array#push findsrc_args "$arg" ;;
  (-t) # findsrc type
    array#push findsrc_args "$arg" "$1"
    shift 1 ;;
  (-t*) # findsrc type
    array#push findsrc_args -t "${arg:2}" ;;
  (-*)
    echo "$0: unknown option ($arg)" >&2
    exit 1 ;;
  ('')
    echo "$0: empty argument is invalid" >&2
    exit 1 ;;
  (--excludes-default)
    fDefaultExcludes=1 ;;
  (*)
    if [[ $regexp ]]; then
      if [[ $fDefaultExcludes ]]; then
        [[ $arg == *'~' ]] && continue

        declare ext
        GetExtension: ext "$arg"
        case "$ext" in
        (.c|.cpp|.cc|.C|.cxx|.h|.hpp|.hxx|.hh|.inl) ;;
        (.js|.ctx|.css) ;;
        (*)
          continue ;;
        esac
      fi
      grep_files[${#grep_files[@]}]="$arg"
    else
      regexp="$arg"
    fi ;;
  esac
done

if [[ -z $regexp ]]; then
  echo "$0: pattern is not specified!" >&2
  exit 2
fi

if ((${#grep_files[@]}==0)); then
  grep_files=($(findsrc "${findsrc_args[@]}"))
fi

if ((${#grep_files[@]}>=1)); then
  grep -E $color_option -n -H "${grep_opts[@]}" "$regexp" "${grep_files[@]}"
fi
